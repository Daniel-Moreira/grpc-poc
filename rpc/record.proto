syntax = "proto3";

package rpc;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
      title: "grpc-poc";
      version: "1.0";
      contact: {
        name: "Daniel Augusto De Melo Moreira";
        url: "https://github.com/Daniel-Moreira/grpc-poc";
        email: "dammkami@gmail.com";
        linkedin: "https://www.linkedin.com/in/daniel-augusto-de-melo-moreira-b85265183/";
      };
    };
    schemes: HTTP;
    schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
  };

service RecordService {
    rpc GetRecord(RecordID) returns (Response) {
        option (google.api.http).get = "/api/records/{id}";
    }
    
    rpc BackupRecord(Record) returns (Response) {
        option (google.api.http) = {
            post = "/api/records.backup"
            body = "*"
        }
    }
}

message Response {
    required bool ok = 1;

    optional Record record = 2;
    optional Error error = 3;
}

message RecordID {
    int32 id = 1;
}

message Record {
    RecordID id = 1;
    string duration = 2;

    enum RecordStatus {
        inprogress = 0;
        completed = 1;
        absent = 2;
        failed = 3;
    }

    RecordStatus status = 3;
    string url = 4;
}
